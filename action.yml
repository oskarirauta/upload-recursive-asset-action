description: 'Upload recursive asset'
branding:
  icon: 'arrow-right-circle'
  color: 'gray-dark'

inputs:
  token:
    description: 'your token'
    required: true
  tag:
    description: 'tag name'
    required: true
  id:
    description: 'release id'
    required: true
  deep:
    description: 'create archive recursively on all levels'
    required: false
    type: boolean
    default: false

runs:
  using: 'composite'
  steps:
    - name: check runner
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=wrong runner os error hint::only Linux is supported"
        exit 1
    - name: create archive
      shell: bash
      run: |
        DEEP="${{ inputs.deep }}"
        if [ "$DEEP" == "true" ]; then
          DEEP="--recursive"
        else
          DEEP=""
        fi
        set -x
        git clone https://github.com/${{ github.repository }} "${{ github.event.repository.name }}-${{ inputs.tag }}"
        cd "${{ github.event.repository.name }}-${{ inputs.tag }}"
        git submodule update --init $DEEP --remote
        cd ..
        tar -czf "${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz" "${{ github.event.repository.name }}-${{ inputs.tag }}"
    - name: upload asset
      shell: bash
      run: |
        RES=$(curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ inputs.id }}/assets?name=${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz" \
          --data-binary "@${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz" 2>/dev/null)

        echo "asset_file=${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz" >> $GITHUB_ENV
        BYTES=$(echo "$RES" | jq '.size')
        if [ -z "$BYTES" ]; then
          echo "failed to upload ${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz" >> $GITHUB_STEP_SUMMARY
          echo "::error title=failed to upload ${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz"
          exit 1
        fi

        if [ "$BYTES" -eq "$BYTES" ] 2>/dev/null; then
          echo "bytes_uploaded=$BYTES" >> $GITHUB_ENV
        else
          echo "failed to upload ${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz, uploaded 0 bytes" >> $GITHUB_STEP_SUMMARY
          echo "::error title=failed to upload ${{ github.event.repository.name }}-${{ inputs.tag }}.tar.gz"
          exit 1
        fi
